name: aniwhere 프로젝트 초기 단계에서의 CI/CD 구축

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Github Aniwhere-BE Repository에 푸시된 파일들을 가져오기
        uses: actions/checkout@v4

      - name: JDK 17 Version 설치하기
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 프라이빗 리포지토리에서 관리 중인 application.yml 파일을 EC2 내부에서 작성하기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 실행 권한 부여하기
        run: chmod +x ./gradlew

      - name: 테스트 코드를 제외하고 프로젝트 빌드하기
        run: ./gradlew clean build -x test

      - name: 빌드된 파일의 이름을 쉽게 다루기 위해 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar > ./build/libs/aniwhere.jar

      - name: SCP Library로 EC2에 빌드된 파일을 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}           # EC2 Public IP(탄력적 IP로 설정할 것)
          username: ${{ secrets.EC2_USERNAME }}   # ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}     # EC2 인스턴스 생성 시 발급받은 Key Pair
          script_stop: true

          script: |
            rm -rf /home/ubuntu/aniwhere/current
            mkdir /home/ubuntu/aniwhere/current
            mv /home/ubuntu/aniwhere/result/aniwhere.jar /home/ubuntu/aniwhere/current/aniwhere.jar
            cd /home/ubuntu/aniwhere/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar aniwhere.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/aniwhere/result