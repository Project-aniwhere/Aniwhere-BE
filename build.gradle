buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// query log
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Json Web Token
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Lombok(Test)
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Java Mail Sender
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//db
	implementation 'mysql:mysql-connector-java:8.0.33'

	// Apache HttpComponents
	implementation 'org.apache.httpcomponents.client5:httpclient5'

	//recommend
	implementation group: 'com.github.haifengl', name: 'smile-core', version: '3.1.1'

	// Query DSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor(
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
			"jakarta.annotation:jakarta.annotation-api",
			"jakarta.persistence:jakarta.persistence-api"
	)
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDir querydslDir
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
	delete file(querydslDir)
}